
/*

   mTCP FtpSrv.cfg
   Copyright (C) 2009-2013 Michael B. Brutman (mbbrutman@gmail.com)
   mTCP web page: http://www.brutman.com/mTCP


   This file is part of mTCP.

   mTCP is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   mTCP is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with mTCP.  If not, see <http://www.gnu.org/licenses/>.


   Description: Configuration file for FTP server

   Changes:

   2011-05-27: Initial release as open source software

*/

// DOSTERM: 0 = use bios, 1 = use dos int 21h for stdin/stout
#ifndef DOSTERM
#define DOSTERM 1
#endif


#ifndef CONFIG_H
#define CONFIG_H




// FTPSRV Config.H
//
// Each application should have a configuration file like this to set
// compile-time options.
//
// Note:
//  - Use only #defines here
//  - All times are in milliseconds


// Global options, can be overridden locally.  Use for setting tracing
// and torture testing/consistency testing.

#include "Global.Cfg"


// Application specifics

#define FTP_MAX_CLIENTS (10)

#define COMMAND_MAX_LEN (20)
#define USERNAME_LEN    (10)
#define USERPASS_LEN    (10)

#define INPUTBUFFER_SIZE   (120)
#define OUTPUTBUFFER_SIZE (1024)


// Defaults, but can be changed by config parameter at run time
#define FILEBUFFER_SIZE   (8192)
#define DATA_RCV_BUF_SIZE (8192)

// We need to be careful not to overflow the client output buffer.
// With a 1K client output buffer 800 bytes for MOTD is plenty.
#define MOTD_MAX_SIZE (OUTPUTBUFFER_SIZE-200)


// DOS limits
//   drive letter + colon + path + null = 67
//   above, plus filename = 79
//
#define DOS_MAX_PATH_LENGTH     (67)
#define DOS_MAX_PATHFILE_LENGTH (79)

// For user paths we express the drive letter as /DRIVE_X instead of X: .
// That is longer, so give them longer paths
//
#define USR_MAX_PATH_LENGTH     (67 + 6)
#define USR_MAX_PATHFILE_LENGTH (79 + 6)

#define USR_MAX_PATH_LENGTH_PADDED     (67 + 20)
#define USR_MAX_PATHFILE_LENGTH_PADDED (79 + 20)


// Major options to include/exclude
//
// #define COMPILE_UDP
#define COMPILE_TCP
// #define COMPILE_DNS
#define COMPILE_ICMP


// Tracing support
//
// If we didn't set it globally then make sure it is turned off locally.

#if !defined(NOTRACE)

#undef NOTRACE
// #define NOTRACE

#endif


#define PKT_DUMP_BYTES (256)



// Packet Layer defines
//
#define PACKET_BUFFERS      (35)   // Number of incoming buffers
#define PACKET_BUFFER_LEN (1514)   // Size of each incoming buffer


// ARP configuration defines
//
#define ARP_MAX_ENTRIES  (10)      // Size of ARP cache
#define ARP_MAX_PENDING   (5)      // Max number of pending requests
#define ARP_RETRIES       (3)      // Total number of attempts to make

#define ARP_TIMEOUT   (500ul)      // Time between retries



// IP Defines
#define IP_FRAGMENTS_ON
#define IP_MAX_FRAG_PACKETS              (4)
#define IP_MAX_FRAGS_PER_PACKET         (10)
#define IP_BIGPACKET_SIZE             (1500)
#define IP_FRAG_REASSEMBLY_TIMEOUT  (4000ul)
//#define IP_SEND_UDP_FRAGS



// ICMP Defines
#ifdef COMPILE_ICMP
#define ICMP_ECHO_OPT_DATA (256)
#endif


// TCP configuration defines
//
#ifdef COMPILE_TCP

#define TCP_MAX_SOCKETS         (21)   // 8 bits only
#define TCP_MAX_XMIT_BUFS       (35)   // 8 bits only
#define TCP_SOCKET_RING_SIZE     (4)   // Must be power of 2
#define TCP_CLOSE_TIMEOUT    (10000ul)

// Optional code
#define TCP_LISTEN_CODE

#endif


// UDP configuration defines
//
#ifdef COMPILE_UDP
#define UDP_MAX_CALLBACKS (5)
#endif


// DNS
//
#ifdef COMPILE_DNS

#define DNS_MAX_NAME_LEN  (128)
#define DNS_MAX_ENTRIES     (1)        // 7 bits only (max 127)
#define DNS_HANDLER_PORT   (57)

#define DNS_RECURSION_DESIRED  (1)

#define DNS_INITIAL_SEND_TIMEOUT   (500ul)   //  0.5 seconds
#define DNS_RETRY_THRESHOLD       (2000ul)   //  2 seconds
#define DNS_TIMEOUT              (10000ul)   // 10 seconds

#endif




#endif
